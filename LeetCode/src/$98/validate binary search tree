Given a binary tree, determine if it is a valid binary search tree (BST).

Assume a BST is defined as follows:

The left subtree of a node contains only nodes with keys less than the node's key.
The right subtree of a node contains only nodes with keys greater than the node's key.
Both the left and right subtrees must also be binary search trees.
Example 1:
    2
   / \
  1   3
Binary tree [2,1,3], return true.
Example 2:
    1
   / \
  2   3
Binary tree [1,2,3], return false.

题目是让我们证明一个二叉树是一个有效的二叉搜索树。什么叫二叉搜索树？定义是对于所有节点，其左子树的值都必须小于
该节点的值，其右子树的值都必须大于该节点的值。

其实通过二叉搜索树的定义，我们就已经能想到这道题目的做法了。对于每个节点，我们给它的值限定一个取值范围就好了。

//插入方法isValidBST()和process()