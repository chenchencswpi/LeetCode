Given a nested list of integers represented as a string, implement a parser to deserialize it.

Each element is either an integer, or a list -- whose elements may also be integers or other lists.

Note: You may assume that the string is well-formed:

String is non-empty.
String does not contain white spaces.
String contains only digits 0-9, [, - ,, ].
Example 1:

Given s = "324",

You should return a NestedInteger object which contains a single integer 324.
Example 2:

Given s = "[123,[456,[789]]]",

Return a NestedInteger object containing a nested list with 2 elements:

1. An integer containing value 123.
2. A nested list containing two elements:
    i.  An integer containing value 456.
    ii. A nested list with one element:
         a. An integer containing value 789.
         
这道题和第341题乍一看有点相似，都是这种一种数据结构嵌套同一种数据结构的题目。

好了我们先来分析一下这道题目。这种数据结构说白了有两种形式，一种是只包含一个单独数字的，另一种就是包含了一个list的NestedInteger.
输入的字符也分为四种，有'[', ']', ','和数字。如果大家参考过摆渡翁带你刷leetcode的341题，大家的第一反应应该是用一栈来存储当前的
所有数据结构。那么关于这四种输入，我们分析一下对于没种输入，我们应该如何应对？

因为我们是按顺序一个一个读取字符，那么我们需要维护一个临时字符串，用来记录当前出现的数字。那么当当前的字符是一个数字的时候，将它添加到
临时字符串后面即可。如果当前的字符是'['，我们知道是时候该创建一个新的NestedInteger对象了，然后将其压栈。如果当前字符是','，就意味着
我们已经读取了一个完整的数字，所以将其加入到栈最顶端的对象当中。举个栗子，例如字符串的开头是"[123, ..."，因为现在栈顶端的对象里没有存
任何对象，并且我们现在只得到了1个完整数字，那么是不是说要将这个对象设置成只包含一个数字的那种NestedInteger呢？不是，因为大家想想，既然
是逗号，那么证明逗号后面还是有别的输入，所以干脆一步到位将其设置成包含一个list的那种NestedItneger。最后一种输入时']'，这种情况是特别
值得考虑的。例如现在的字符串是"[123,[456]]"，对于第一个出现的']'，我们要将目前