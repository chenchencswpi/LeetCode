Given a binary tree, imagine yourself standing on the right side of it, return the values 
of the nodes you can see ordered from top to bottom.

For example:
Given the following binary tree,
   1            <---
 /   \
2     3         <---
 \     \
  5     4       <---
You should return [1, 3, 4].

给定一个二叉树，假设你站在这个数的右边，那么返回你能看到的所有节点的值（从顶至下的顺序）。

大家做了这么多题了，也可能有这样的感触就是，题目描述的很fancy，但其实做起来才发现，没那么fancy。比如这道题，说白了
就是输出每层最靠右的那个节点。那么这道题怎么做呢？那就是我们在dfs的时候，先考虑右孩子。如果没有又孩子，再考虑左孩子。

//插入方法rightSideViewDFS()和process()

那么这道题的bfs该怎么做呢？我们可以维护两个队列，分别用来存储叶节点以及叶节点对应的深度。

//插入方法rightSideViewBFS()