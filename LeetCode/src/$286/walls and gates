You are given a m x n 2D grid initialized with these three possible values.

-1 - A wall or an obstacle.
0 - A gate.
INF - Infinity means an empty room. We use the value 231 - 1 = 2147483647 to represent INF 
as you may assume that the distance to a gate is less than 2147483647.
Fill each empty room with the distance to its nearest gate. If it is impossible to reach a gate, 
it should be filled with INF.

For example, given the 2D grid:
INF  -1  0  INF
INF INF INF  -1
INF  -1 INF  -1
  0  -1 INF INF
After running your function, the 2D grid should be:
  3  -1   0   1
  2   2   1  -1
  1  -1   2  -1
  0  -1   3   4
  
给定一个二维数组，让我们来标出所有的空房间离其最近入口的距离。

这道题大家一眼就看出来用bfs。那么我们在做bfs的时候，当处理到一个房间的时候，判断其相邻房间要不要加入到当前队列里，有什么
判断条件呢？其实有三个：（1）出界了的不能加；（2）如果是面墙，不能加；（3）如果相邻房间存储的值不大于当前房间存的值，不能加。
那为什么相邻房间村春的之不大于当前房间存储的值就不能加了呢？这是因为肯定是已经有更近的gate发现过了这个room了。好了看代码：

//插入方法wallsAndGates()和bfs()