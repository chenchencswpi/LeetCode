This is a follow up of Shortest Word Distance. The only difference is now word1 could be the same as word2.

Given a list of words and two words word1 and word2, return the shortest distance between these two words 
in the list.

word1 and word2 may be the same and they represent two individual words in the list.

For example,
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].

Given word1 = “makes”, word2 = “coding”, return 1.
Given word1 = "makes", word2 = "makes", return 3.

Note:
You may assume word1 and word2 are both in the list.

这道题是摆渡翁带你刷leetcode第243题的follow up。与那道题不同的是，两个单词可能是相同的。

我们维护两个变量index1和index2，初始化为-1，分别用来存储最后发现的word1和word2的位置。我们在遍历整个数组的时候，如果发现当前位置的单词和第一个
单词是一样的，那么有如下这么几种情况：（1）如果word1和word2不同，那将index1设为当前位置；（2）如果word1和word2相同，并且index1还为-1的话，那
将这个位置赋给index1；（3）如果word1和word2相同，并且index1不为-1，index2为-1的话，将这个位置赋给index2；（4）如果word1和word2相同，并且
index1,index2都不是-1的话，那么将当前位置赋给值较小的index。好了看代码：

//插入方法shortestWordDistance()