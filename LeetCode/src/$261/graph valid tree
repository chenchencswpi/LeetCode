Given n nodes labeled from 0 to n - 1 and a list of undirected edges (each edge is a pair of nodes), 
write a function to check whether these edges make up a valid tree.

For example:

Given n = 5 and edges = [[0, 1], [0, 2], [0, 3], [1, 4]], return true.

Given n = 5 and edges = [[0, 1], [1, 2], [2, 3], [1, 3], [1, 4]], return false.

这道题的大意是给定一些节点以及无向边，让我们检查它们是否能构成一个有效的树。其实说白了，就是检查这些节点和边构成的图是不是有环。
那么这道题就有两种bfs和dfs两种做法了。我们先将每个节点以及这个节点的所有边都存放起来。对于dfs来说，那就将该节点所能到达的所有
节点统统标记起来；对于bfs来说，就是一层一层的标记。但不论哪种做法，最后应当查看是不是所有的节点都被访问过了。好了看代码：

//插入方法validTreeDFS()，dfs()和validTreeBFS()