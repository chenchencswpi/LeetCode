Given a singly linked list where elements are sorted in ascending order, 
convert it to a height balanced BST.

给定一个单向链表，所有的元素是按照升序存储的。将其转换成高度平衡的二叉搜索树。

这道题和摆渡翁带你刷leetcode第108题基本上是一样的，只不过是将数组换成了单向链表。其实做法也是大致相同的，
就是不断的找中点。大家可能很自然而然的联想到了用2 runners的方法去找中点，但是这样做是非常低效率的。相当于
我们每次要构造一个树节点的时候，都需要将整个链表再走一遍。那么有没有更好的方法呢？

其实我们可以用一个哈希表将整个链表存起来，坐标（也就是位置）作为key,ListNode自身作为value，这样问题就可以
迎刃而解了。

//插入方法sortedListToBST()和process()

那面试官可能会Follow up一下，问能不能不用额外的空间来做这道题呢？其实是能的，不过不是很好想出来。这需要我们联系
到二叉树的中序遍历，如果我们将二叉树中序遍历的结果存到一个单向链表里面，那么就是一个升序的单向链表。那给我们一个升序
的单向链表，我们也可以反过来用中序遍历的方法去构造二叉树。

//插入整个solution类