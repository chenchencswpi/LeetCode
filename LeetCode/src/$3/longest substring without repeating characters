Given a string, find the length of the longest substring without repeating characters.

Examples:

Given "abcabcbb", the answer is "abc", which the length is 3.

Given "bbbbb", the answer is "b", with the length of 1.

Given "pwwkew", the answer is "wke", with the length of 3. Note that the answer must be a substring, "pwke" is a 
subsequence and not a substring.

题目大意是给我们一个字符串，让我们找出一个最长的没有重复字符的子字符串。

我们可以用一个哈希表来记录每个字符出现的位置。在遍历字符串的时候，如果发现某个字符在以前已经出现过了，那我们就去更新目前的最长子字符串的长度，然后
从重复的字符第一次出现的位置的后一个位置开始，从头再来（心若在，梦就在。。不知道为什么想起了这首歌）。当然了我们也可以直接用一个布尔型数组来记录一个
字符有没有出现过。下面这段代码就是用数组来实现的：

//插入方法lengthOfLongestSubstring()